class Solution {
    public int largestRectangleArea(int[] heights) {
        int n =heights.length;
        Stack<Integer> stack =new Stack<>();
        int maxArea =0;

        for(int i=0 ;i<= n ;i++){

            int currHeight = (i == n)? 0 :heights[i];

            while(!stack.isEmpty() && currHeight < heights[stack.peek()]){
                int topIdx = stack.pop();
                int topHt =heights[topIdx];


                int width ;
                if(stack.isEmpty()){
                 width = i;

                }else{
                    width = i -stack.peek() -1;
                }
                int area = topHt * width;
                if(area > maxArea){
                    maxArea =area;
                }
            }
            stack.push(i);
        }
        return maxArea;
    }
}
